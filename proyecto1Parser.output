Terminals unused in grammar

    NULLN
    STRINGERROR
    INVCHAR
    INVESCP
    LINEJMP
    TAB
    SPACE


State 87 conflicts: 1 shift/reduce, 2 reduce/reduce
State 99 conflicts: 1 shift/reduce
State 108 conflicts: 1 shift/reduce
State 119 conflicts: 2 shift/reduce
State 120 conflicts: 2 shift/reduce
State 152 conflicts: 1 shift/reduce
State 154 conflicts: 2 shift/reduce
State 155 conflicts: 2 shift/reduce
State 156 conflicts: 2 shift/reduce
State 157 conflicts: 2 shift/reduce
State 158 conflicts: 2 shift/reduce
State 159 conflicts: 2 shift/reduce
State 160 conflicts: 2 shift/reduce
State 161 conflicts: 2 shift/reduce
State 162 conflicts: 2 shift/reduce
State 163 conflicts: 2 shift/reduce
State 164 conflicts: 2 shift/reduce
State 165 conflicts: 2 shift/reduce
State 166 conflicts: 2 shift/reduce
State 167 conflicts: 2 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: Declarations

    2 Declarations: Declaration
    3             | Declarations Declaration

    4 Declaration: VariableDecl
    5            | FunctionDecl
    6            | ClassDecl
    7            | InterfaceDecl

    8 VariableDecl: Variable SEMICLN

    9 Variable: Type ID

   10 Type: INTEGER
   11     | DOUBLE
   12     | BOOL
   13     | STRING
   14     | ID
   15     | Type LFTBRCKT RGHBRCKT

   16 FunctionDecl: Type ID LFTPARTH Formals RGHPARTH StmtBlock
   17             | VOID ID LFTPARTH Formals RGHPARTH StmtBlock

   18 Formals: Variables
   19        | %empty

   20 Variables: Variable
   21          | Variables COMMA Variable

   22 ClassDecl: CLASS ID Extend Implement LFTGATE Fields RGHGATE

   23 Extend: EXTENDS ID
   24       | %empty

   25 Implement: IMPLEMENTS ListIdents
   26          | %empty

   27 ListIdents: ID
   28           | ListIdents COMMA ID

   29 Fields: Fields Field
   30       | %empty

   31 Field: VariableDecl
   32      | FunctionDecl

   33 InterfaceDecl: INTERFACE ID LFTGATE Prototypes RGHGATE

   34 Prototypes: Prototypes Prototype
   35           | %empty

   36 Prototype: Type ID LFTPARTH Formals RGHPARTH SEMICLN
   37          | VOID ID LFTPARTH Formals RGHPARTH SEMICLN

   38 StmtBlock: LFTGATE Stmts RGHGATE

   39 Stmts: Stmts Stmt
   40      | %empty

   41 Stmt: IfStmt
   42     | WhileStmt
   43     | ForStmt
   44     | BreakStmt
   45     | ReturnStmt
   46     | PrintStmt
   47     | StmtBlock
   48     | Expr
   49     | VariableDecl

   50 PossibleExpr: Expr
   51             | %empty

   52 IfStmt: IF LFTPARTH Expr RGHPARTH Stmt PossibleElse

   53 PossibleElse: ELSE Stmt

   54 WhileStmt: WHILE LFTPARTH Expr RGHPARTH Stmt

   55 ForStmt: FOR LFTPARTH PossibleExpr SEMICLN PossibleExpr SEMICLN PossibleExpr RGHPARTH Stmt

   56 ReturnStmt: RETURN PossibleExpr SEMICLN

   57 BreakStmt: BREAK SEMICLN

   58 PrintStmt: PRINT LFTPARTH ListExpr RGHPARTH SEMICLN

   59 ListExpr: Expr
   60         | ListExpr COMMA Expr

   61 Expr: LValue EQUAL Expr
   62     | Constant
   63     | LValue
   64     | THIS
   65     | Call
   66     | LFTPARTH Expr RGHPARTH
   67     | Expr SUM Expr
   68     | Expr SUB Expr
   69     | Expr MULT Expr
   70     | Expr DIV Expr
   71     | Expr MOD Expr
   72     | SUB Expr
   73     | Expr LESSTHN Expr
   74     | Expr LESSEQL Expr
   75     | Expr GREATERTHN Expr
   76     | Expr GREATEREQL Expr
   77     | Expr SAME Expr
   78     | Expr DIFF Expr
   79     | Expr AND Expr
   80     | Expr OR Expr
   81     | NOT Expr
   82     | READINTEGER LFTPARTH RGHPARTH
   83     | READLINE LFTPARTH RGHPARTH
   84     | NEW LFTPARTH ID RGHPARTH
   85     | NEWARRAY LFTPARTH Expr COMMA Type RGHPARTH

   86 LValue: ID
   87       | Expr POINT ID
   88       | Expr LFTBRCKT Expr RGHBRCKT

   89 Call: ID LFTPARTH Actuals RGHPARTH
   90     | Expr POINT ID LFTPARTH Actuals RGHPARTH

   91 Actuals: ListExpr
   92        | %empty

   93 Constant: INTVAL
   94         | DOUBLEVAL
   95         | TRUE
   96         | FALSE
   97         | STRINGVAL
   98         | NULLVAL


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    VOID (258) 17 37
    INTEGER (259) 10
    DOUBLE (260) 11
    BOOL (261) 12
    STRING (262) 13
    CLASS (263) 22
    INTERFACE (264) 33
    NULLN (265)
    THIS (266) 64
    EXTENDS (267) 23
    IMPLEMENTS (268) 25
    FOR (269) 55
    WHILE (270) 54
    IF (271) 52
    ELSE (272) 53
    RETURN (273) 56
    BREAK (274) 57
    NEW (275) 84
    NEWARRAY (276) 85
    PRINT (277) 58
    READINTEGER (278) 82
    READLINE (279) 83
    TRUE (280) 95
    FALSE (281) 96
    COMMA (282) 21 28 60 85
    POINT (283) 87 90
    LFTBRCKT (284) 15 88
    RGHBRCKT (285) 15 88
    LFTPARTH (286) 16 17 36 37 52 54 55 58 66 82 83 84 85 89 90
    RGHPARTH (287) 16 17 36 37 52 54 55 58 66 82 83 84 85 89 90
    SEMICLN (288) 8 36 37 55 56 57 58
    LFTGATE (289) 22 33 38
    RGHGATE (290) 22 33 38
    STRINGERROR (291)
    INVCHAR (292)
    INVESCP (293)
    LINEJMP (294)
    TAB (295)
    SPACE (296)
    INTVAL (297) 93
    DOUBLEVAL (298) 94
    STRINGVAL (299) 97
    NULLVAL (300) 98
    OR (301) 80
    LESSEQL <str> (302) 74
    ID <str> (303) 9 14 16 17 22 23 27 28 33 36 37 84 86 87 89 90
    SUM <str> (304) 67
    SUB <str> (305) 68 72
    MULT <str> (306) 69
    DIV <str> (307) 70
    LESSTHN <str> (308) 73
    GREATERTHN <str> (309) 75
    MOD <str> (310) 71
    GREATEREQL (311) 76
    EQUAL (312) 61
    SAME (313) 77
    DIFF (314) 78
    AND (315) 79
    NOT (316) 81


Nonterminals, with rules where they appear

    $accept (62)
        on left: 0
    Program <treeNode> (63)
        on left: 1
        on right: 0
    Declarations <treeNode> (64)
        on left: 2 3
        on right: 1 3
    Declaration <treeNode> (65)
        on left: 4 5 6 7
        on right: 2 3
    VariableDecl <treeNode> (66)
        on left: 8
        on right: 4 31 49
    Variable <treeNode> (67)
        on left: 9
        on right: 8 20 21
    Type <treeNode> (68)
        on left: 10 11 12 13 14 15
        on right: 9 15 16 36 85
    FunctionDecl <treeNode> (69)
        on left: 16 17
        on right: 5 32
    Formals <treeNode> (70)
        on left: 18 19
        on right: 16 17 36 37
    Variables <treeNode> (71)
        on left: 20 21
        on right: 18 21
    ClassDecl <treeNode> (72)
        on left: 22
        on right: 6
    Extend <treeNode> (73)
        on left: 23 24
        on right: 22
    Implement <treeNode> (74)
        on left: 25 26
        on right: 22
    ListIdents <treeNode> (75)
        on left: 27 28
        on right: 25 28
    Fields <treeNode> (76)
        on left: 29 30
        on right: 22 29
    Field <treeNode> (77)
        on left: 31 32
        on right: 29
    InterfaceDecl <treeNode> (78)
        on left: 33
        on right: 7
    Prototypes <treeNode> (79)
        on left: 34 35
        on right: 33 34
    Prototype <treeNode> (80)
        on left: 36 37
        on right: 34
    StmtBlock <treeNode> (81)
        on left: 38
        on right: 16 17 47
    Stmts <treeNode> (82)
        on left: 39 40
        on right: 38 39
    Stmt <treeNode> (83)
        on left: 41 42 43 44 45 46 47 48 49
        on right: 39 52 53 54 55
    PossibleExpr <treeNode> (84)
        on left: 50 51
        on right: 55 56
    IfStmt <treeNode> (85)
        on left: 52
        on right: 41
    PossibleElse <treeNode> (86)
        on left: 53
        on right: 52
    WhileStmt <treeNode> (87)
        on left: 54
        on right: 42
    ForStmt <treeNode> (88)
        on left: 55
        on right: 43
    ReturnStmt <treeNode> (89)
        on left: 56
        on right: 45
    BreakStmt <treeNode> (90)
        on left: 57
        on right: 44
    PrintStmt <treeNode> (91)
        on left: 58
        on right: 46
    ListExpr <treeNode> (92)
        on left: 59 60
        on right: 58 60 91
    Expr <treeNode> (93)
        on left: 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85
        on right: 48 50 52 54 59 60 61 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 85 87 88 90
    LValue <treeNode> (94)
        on left: 86 87 88
        on right: 61 63
    Call <treeNode> (95)
        on left: 89 90
        on right: 65
    Actuals <treeNode> (96)
        on left: 91 92
        on right: 89 90
    Constant <treeNode> (97)
        on left: 93 94 95 96 97 98
        on right: 62


State 0

    0 $accept: . Program $end

    VOID       shift, and go to state 1
    INTEGER    shift, and go to state 2
    DOUBLE     shift, and go to state 3
    BOOL       shift, and go to state 4
    STRING     shift, and go to state 5
    CLASS      shift, and go to state 6
    INTERFACE  shift, and go to state 7
    ID         shift, and go to state 8

    Program        go to state 9
    Declarations   go to state 10
    Declaration    go to state 11
    VariableDecl   go to state 12
    Variable       go to state 13
    Type           go to state 14
    FunctionDecl   go to state 15
    ClassDecl      go to state 16
    InterfaceDecl  go to state 17


State 1

   17 FunctionDecl: VOID . ID LFTPARTH Formals RGHPARTH StmtBlock

    ID  shift, and go to state 18


State 2

   10 Type: INTEGER .

    $default  reduce using rule 10 (Type)


State 3

   11 Type: DOUBLE .

    $default  reduce using rule 11 (Type)


State 4

   12 Type: BOOL .

    $default  reduce using rule 12 (Type)


State 5

   13 Type: STRING .

    $default  reduce using rule 13 (Type)


State 6

   22 ClassDecl: CLASS . ID Extend Implement LFTGATE Fields RGHGATE

    ID  shift, and go to state 19


State 7

   33 InterfaceDecl: INTERFACE . ID LFTGATE Prototypes RGHGATE

    ID  shift, and go to state 20


State 8

   14 Type: ID .

    $default  reduce using rule 14 (Type)


State 9

    0 $accept: Program . $end

    $end  shift, and go to state 21


State 10

    1 Program: Declarations .
    3 Declarations: Declarations . Declaration

    VOID       shift, and go to state 1
    INTEGER    shift, and go to state 2
    DOUBLE     shift, and go to state 3
    BOOL       shift, and go to state 4
    STRING     shift, and go to state 5
    CLASS      shift, and go to state 6
    INTERFACE  shift, and go to state 7
    ID         shift, and go to state 8

    $default  reduce using rule 1 (Program)

    Declaration    go to state 22
    VariableDecl   go to state 12
    Variable       go to state 13
    Type           go to state 14
    FunctionDecl   go to state 15
    ClassDecl      go to state 16
    InterfaceDecl  go to state 17


State 11

    2 Declarations: Declaration .

    $default  reduce using rule 2 (Declarations)


State 12

    4 Declaration: VariableDecl .

    $default  reduce using rule 4 (Declaration)


State 13

    8 VariableDecl: Variable . SEMICLN

    SEMICLN  shift, and go to state 23


State 14

    9 Variable: Type . ID
   15 Type: Type . LFTBRCKT RGHBRCKT
   16 FunctionDecl: Type . ID LFTPARTH Formals RGHPARTH StmtBlock

    LFTBRCKT  shift, and go to state 24
    ID        shift, and go to state 25


State 15

    5 Declaration: FunctionDecl .

    $default  reduce using rule 5 (Declaration)


State 16

    6 Declaration: ClassDecl .

    $default  reduce using rule 6 (Declaration)


State 17

    7 Declaration: InterfaceDecl .

    $default  reduce using rule 7 (Declaration)


State 18

   17 FunctionDecl: VOID ID . LFTPARTH Formals RGHPARTH StmtBlock

    LFTPARTH  shift, and go to state 26


State 19

   22 ClassDecl: CLASS ID . Extend Implement LFTGATE Fields RGHGATE

    EXTENDS  shift, and go to state 27

    $default  reduce using rule 24 (Extend)

    Extend  go to state 28


State 20

   33 InterfaceDecl: INTERFACE ID . LFTGATE Prototypes RGHGATE

    LFTGATE  shift, and go to state 29


State 21

    0 $accept: Program $end .

    $default  accept


State 22

    3 Declarations: Declarations Declaration .

    $default  reduce using rule 3 (Declarations)


State 23

    8 VariableDecl: Variable SEMICLN .

    $default  reduce using rule 8 (VariableDecl)


State 24

   15 Type: Type LFTBRCKT . RGHBRCKT

    RGHBRCKT  shift, and go to state 30


State 25

    9 Variable: Type ID .
   16 FunctionDecl: Type ID . LFTPARTH Formals RGHPARTH StmtBlock

    LFTPARTH  shift, and go to state 31

    $default  reduce using rule 9 (Variable)


State 26

   17 FunctionDecl: VOID ID LFTPARTH . Formals RGHPARTH StmtBlock

    INTEGER  shift, and go to state 2
    DOUBLE   shift, and go to state 3
    BOOL     shift, and go to state 4
    STRING   shift, and go to state 5
    ID       shift, and go to state 8

    $default  reduce using rule 19 (Formals)

    Variable   go to state 32
    Type       go to state 33
    Formals    go to state 34
    Variables  go to state 35


State 27

   23 Extend: EXTENDS . ID

    ID  shift, and go to state 36


State 28

   22 ClassDecl: CLASS ID Extend . Implement LFTGATE Fields RGHGATE

    IMPLEMENTS  shift, and go to state 37

    $default  reduce using rule 26 (Implement)

    Implement  go to state 38


State 29

   33 InterfaceDecl: INTERFACE ID LFTGATE . Prototypes RGHGATE

    $default  reduce using rule 35 (Prototypes)

    Prototypes  go to state 39


State 30

   15 Type: Type LFTBRCKT RGHBRCKT .

    $default  reduce using rule 15 (Type)


State 31

   16 FunctionDecl: Type ID LFTPARTH . Formals RGHPARTH StmtBlock

    INTEGER  shift, and go to state 2
    DOUBLE   shift, and go to state 3
    BOOL     shift, and go to state 4
    STRING   shift, and go to state 5
    ID       shift, and go to state 8

    $default  reduce using rule 19 (Formals)

    Variable   go to state 32
    Type       go to state 33
    Formals    go to state 40
    Variables  go to state 35


State 32

   20 Variables: Variable .

    $default  reduce using rule 20 (Variables)


State 33

    9 Variable: Type . ID
   15 Type: Type . LFTBRCKT RGHBRCKT

    LFTBRCKT  shift, and go to state 24
    ID        shift, and go to state 41


State 34

   17 FunctionDecl: VOID ID LFTPARTH Formals . RGHPARTH StmtBlock

    RGHPARTH  shift, and go to state 42


State 35

   18 Formals: Variables .
   21 Variables: Variables . COMMA Variable

    COMMA  shift, and go to state 43

    $default  reduce using rule 18 (Formals)


State 36

   23 Extend: EXTENDS ID .

    $default  reduce using rule 23 (Extend)


State 37

   25 Implement: IMPLEMENTS . ListIdents

    ID  shift, and go to state 44

    ListIdents  go to state 45


State 38

   22 ClassDecl: CLASS ID Extend Implement . LFTGATE Fields RGHGATE

    LFTGATE  shift, and go to state 46


State 39

   33 InterfaceDecl: INTERFACE ID LFTGATE Prototypes . RGHGATE
   34 Prototypes: Prototypes . Prototype

    VOID     shift, and go to state 47
    INTEGER  shift, and go to state 2
    DOUBLE   shift, and go to state 3
    BOOL     shift, and go to state 4
    STRING   shift, and go to state 5
    RGHGATE  shift, and go to state 48
    ID       shift, and go to state 8

    Type       go to state 49
    Prototype  go to state 50


State 40

   16 FunctionDecl: Type ID LFTPARTH Formals . RGHPARTH StmtBlock

    RGHPARTH  shift, and go to state 51


State 41

    9 Variable: Type ID .

    $default  reduce using rule 9 (Variable)


State 42

   17 FunctionDecl: VOID ID LFTPARTH Formals RGHPARTH . StmtBlock

    LFTGATE  shift, and go to state 52

    StmtBlock  go to state 53


State 43

   21 Variables: Variables COMMA . Variable

    INTEGER  shift, and go to state 2
    DOUBLE   shift, and go to state 3
    BOOL     shift, and go to state 4
    STRING   shift, and go to state 5
    ID       shift, and go to state 8

    Variable  go to state 54
    Type      go to state 33


State 44

   27 ListIdents: ID .

    $default  reduce using rule 27 (ListIdents)


State 45

   25 Implement: IMPLEMENTS ListIdents .
   28 ListIdents: ListIdents . COMMA ID

    COMMA  shift, and go to state 55

    $default  reduce using rule 25 (Implement)


State 46

   22 ClassDecl: CLASS ID Extend Implement LFTGATE . Fields RGHGATE

    $default  reduce using rule 30 (Fields)

    Fields  go to state 56


State 47

   37 Prototype: VOID . ID LFTPARTH Formals RGHPARTH SEMICLN

    ID  shift, and go to state 57


State 48

   33 InterfaceDecl: INTERFACE ID LFTGATE Prototypes RGHGATE .

    $default  reduce using rule 33 (InterfaceDecl)


State 49

   15 Type: Type . LFTBRCKT RGHBRCKT
   36 Prototype: Type . ID LFTPARTH Formals RGHPARTH SEMICLN

    LFTBRCKT  shift, and go to state 24
    ID        shift, and go to state 58


State 50

   34 Prototypes: Prototypes Prototype .

    $default  reduce using rule 34 (Prototypes)


State 51

   16 FunctionDecl: Type ID LFTPARTH Formals RGHPARTH . StmtBlock

    LFTGATE  shift, and go to state 52

    StmtBlock  go to state 59


State 52

   38 StmtBlock: LFTGATE . Stmts RGHGATE

    $default  reduce using rule 40 (Stmts)

    Stmts  go to state 60


State 53

   17 FunctionDecl: VOID ID LFTPARTH Formals RGHPARTH StmtBlock .

    $default  reduce using rule 17 (FunctionDecl)


State 54

   21 Variables: Variables COMMA Variable .

    $default  reduce using rule 21 (Variables)


State 55

   28 ListIdents: ListIdents COMMA . ID

    ID  shift, and go to state 61


State 56

   22 ClassDecl: CLASS ID Extend Implement LFTGATE Fields . RGHGATE
   29 Fields: Fields . Field

    VOID     shift, and go to state 1
    INTEGER  shift, and go to state 2
    DOUBLE   shift, and go to state 3
    BOOL     shift, and go to state 4
    STRING   shift, and go to state 5
    RGHGATE  shift, and go to state 62
    ID       shift, and go to state 8

    VariableDecl  go to state 63
    Variable      go to state 13
    Type          go to state 14
    FunctionDecl  go to state 64
    Field         go to state 65


State 57

   37 Prototype: VOID ID . LFTPARTH Formals RGHPARTH SEMICLN

    LFTPARTH  shift, and go to state 66


State 58

   36 Prototype: Type ID . LFTPARTH Formals RGHPARTH SEMICLN

    LFTPARTH  shift, and go to state 67


State 59

   16 FunctionDecl: Type ID LFTPARTH Formals RGHPARTH StmtBlock .

    $default  reduce using rule 16 (FunctionDecl)


State 60

   38 StmtBlock: LFTGATE Stmts . RGHGATE
   39 Stmts: Stmts . Stmt

    INTEGER      shift, and go to state 2
    DOUBLE       shift, and go to state 3
    BOOL         shift, and go to state 4
    STRING       shift, and go to state 5
    THIS         shift, and go to state 68
    FOR          shift, and go to state 69
    WHILE        shift, and go to state 70
    IF           shift, and go to state 71
    RETURN       shift, and go to state 72
    BREAK        shift, and go to state 73
    NEW          shift, and go to state 74
    NEWARRAY     shift, and go to state 75
    PRINT        shift, and go to state 76
    READINTEGER  shift, and go to state 77
    READLINE     shift, and go to state 78
    TRUE         shift, and go to state 79
    FALSE        shift, and go to state 80
    LFTPARTH     shift, and go to state 81
    LFTGATE      shift, and go to state 52
    RGHGATE      shift, and go to state 82
    INTVAL       shift, and go to state 83
    DOUBLEVAL    shift, and go to state 84
    STRINGVAL    shift, and go to state 85
    NULLVAL      shift, and go to state 86
    ID           shift, and go to state 87
    SUB          shift, and go to state 88
    NOT          shift, and go to state 89

    VariableDecl  go to state 90
    Variable      go to state 13
    Type          go to state 33
    StmtBlock     go to state 91
    Stmt          go to state 92
    IfStmt        go to state 93
    WhileStmt     go to state 94
    ForStmt       go to state 95
    ReturnStmt    go to state 96
    BreakStmt     go to state 97
    PrintStmt     go to state 98
    Expr          go to state 99
    LValue        go to state 100
    Call          go to state 101
    Constant      go to state 102


State 61

   28 ListIdents: ListIdents COMMA ID .

    $default  reduce using rule 28 (ListIdents)


State 62

   22 ClassDecl: CLASS ID Extend Implement LFTGATE Fields RGHGATE .

    $default  reduce using rule 22 (ClassDecl)


State 63

   31 Field: VariableDecl .

    $default  reduce using rule 31 (Field)


State 64

   32 Field: FunctionDecl .

    $default  reduce using rule 32 (Field)


State 65

   29 Fields: Fields Field .

    $default  reduce using rule 29 (Fields)


State 66

   37 Prototype: VOID ID LFTPARTH . Formals RGHPARTH SEMICLN

    INTEGER  shift, and go to state 2
    DOUBLE   shift, and go to state 3
    BOOL     shift, and go to state 4
    STRING   shift, and go to state 5
    ID       shift, and go to state 8

    $default  reduce using rule 19 (Formals)

    Variable   go to state 32
    Type       go to state 33
    Formals    go to state 103
    Variables  go to state 35


State 67

   36 Prototype: Type ID LFTPARTH . Formals RGHPARTH SEMICLN

    INTEGER  shift, and go to state 2
    DOUBLE   shift, and go to state 3
    BOOL     shift, and go to state 4
    STRING   shift, and go to state 5
    ID       shift, and go to state 8

    $default  reduce using rule 19 (Formals)

    Variable   go to state 32
    Type       go to state 33
    Formals    go to state 104
    Variables  go to state 35


State 68

   64 Expr: THIS .

    $default  reduce using rule 64 (Expr)


State 69

   55 ForStmt: FOR . LFTPARTH PossibleExpr SEMICLN PossibleExpr SEMICLN PossibleExpr RGHPARTH Stmt

    LFTPARTH  shift, and go to state 105


State 70

   54 WhileStmt: WHILE . LFTPARTH Expr RGHPARTH Stmt

    LFTPARTH  shift, and go to state 106


State 71

   52 IfStmt: IF . LFTPARTH Expr RGHPARTH Stmt PossibleElse

    LFTPARTH  shift, and go to state 107


State 72

   56 ReturnStmt: RETURN . PossibleExpr SEMICLN

    THIS         shift, and go to state 68
    NEW          shift, and go to state 74
    NEWARRAY     shift, and go to state 75
    READINTEGER  shift, and go to state 77
    READLINE     shift, and go to state 78
    TRUE         shift, and go to state 79
    FALSE        shift, and go to state 80
    LFTPARTH     shift, and go to state 81
    INTVAL       shift, and go to state 83
    DOUBLEVAL    shift, and go to state 84
    STRINGVAL    shift, and go to state 85
    NULLVAL      shift, and go to state 86
    ID           shift, and go to state 108
    SUB          shift, and go to state 88
    NOT          shift, and go to state 89

    $default  reduce using rule 51 (PossibleExpr)

    PossibleExpr  go to state 109
    Expr          go to state 110
    LValue        go to state 100
    Call          go to state 101
    Constant      go to state 102


State 73

   57 BreakStmt: BREAK . SEMICLN

    SEMICLN  shift, and go to state 111


State 74

   84 Expr: NEW . LFTPARTH ID RGHPARTH

    LFTPARTH  shift, and go to state 112


State 75

   85 Expr: NEWARRAY . LFTPARTH Expr COMMA Type RGHPARTH

    LFTPARTH  shift, and go to state 113


State 76

   58 PrintStmt: PRINT . LFTPARTH ListExpr RGHPARTH SEMICLN

    LFTPARTH  shift, and go to state 114


State 77

   82 Expr: READINTEGER . LFTPARTH RGHPARTH

    LFTPARTH  shift, and go to state 115


State 78

   83 Expr: READLINE . LFTPARTH RGHPARTH

    LFTPARTH  shift, and go to state 116


State 79

   95 Constant: TRUE .

    $default  reduce using rule 95 (Constant)


State 80

   96 Constant: FALSE .

    $default  reduce using rule 96 (Constant)


State 81

   66 Expr: LFTPARTH . Expr RGHPARTH

    THIS         shift, and go to state 68
    NEW          shift, and go to state 74
    NEWARRAY     shift, and go to state 75
    READINTEGER  shift, and go to state 77
    READLINE     shift, and go to state 78
    TRUE         shift, and go to state 79
    FALSE        shift, and go to state 80
    LFTPARTH     shift, and go to state 81
    INTVAL       shift, and go to state 83
    DOUBLEVAL    shift, and go to state 84
    STRINGVAL    shift, and go to state 85
    NULLVAL      shift, and go to state 86
    ID           shift, and go to state 108
    SUB          shift, and go to state 88
    NOT          shift, and go to state 89

    Expr      go to state 117
    LValue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 82

   38 StmtBlock: LFTGATE Stmts RGHGATE .

    $default  reduce using rule 38 (StmtBlock)


State 83

   93 Constant: INTVAL .

    $default  reduce using rule 93 (Constant)


State 84

   94 Constant: DOUBLEVAL .

    $default  reduce using rule 94 (Constant)


State 85

   97 Constant: STRINGVAL .

    $default  reduce using rule 97 (Constant)


State 86

   98 Constant: NULLVAL .

    $default  reduce using rule 98 (Constant)


State 87

   14 Type: ID .
   86 LValue: ID .
   89 Call: ID . LFTPARTH Actuals RGHPARTH

    LFTPARTH  shift, and go to state 118

    LFTBRCKT  reduce using rule 14 (Type)
    LFTBRCKT  [reduce using rule 86 (LValue)]
    LFTPARTH  [reduce using rule 86 (LValue)]
    ID        reduce using rule 14 (Type)
    ID        [reduce using rule 86 (LValue)]
    $default  reduce using rule 86 (LValue)


State 88

   72 Expr: SUB . Expr

    THIS         shift, and go to state 68
    NEW          shift, and go to state 74
    NEWARRAY     shift, and go to state 75
    READINTEGER  shift, and go to state 77
    READLINE     shift, and go to state 78
    TRUE         shift, and go to state 79
    FALSE        shift, and go to state 80
    LFTPARTH     shift, and go to state 81
    INTVAL       shift, and go to state 83
    DOUBLEVAL    shift, and go to state 84
    STRINGVAL    shift, and go to state 85
    NULLVAL      shift, and go to state 86
    ID           shift, and go to state 108
    SUB          shift, and go to state 88
    NOT          shift, and go to state 89

    Expr      go to state 119
    LValue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 89

   81 Expr: NOT . Expr

    THIS         shift, and go to state 68
    NEW          shift, and go to state 74
    NEWARRAY     shift, and go to state 75
    READINTEGER  shift, and go to state 77
    READLINE     shift, and go to state 78
    TRUE         shift, and go to state 79
    FALSE        shift, and go to state 80
    LFTPARTH     shift, and go to state 81
    INTVAL       shift, and go to state 83
    DOUBLEVAL    shift, and go to state 84
    STRINGVAL    shift, and go to state 85
    NULLVAL      shift, and go to state 86
    ID           shift, and go to state 108
    SUB          shift, and go to state 88
    NOT          shift, and go to state 89

    Expr      go to state 120
    LValue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 90

   49 Stmt: VariableDecl .

    $default  reduce using rule 49 (Stmt)


State 91

   47 Stmt: StmtBlock .

    $default  reduce using rule 47 (Stmt)


State 92

   39 Stmts: Stmts Stmt .

    $default  reduce using rule 39 (Stmts)


State 93

   41 Stmt: IfStmt .

    $default  reduce using rule 41 (Stmt)


State 94

   42 Stmt: WhileStmt .

    $default  reduce using rule 42 (Stmt)


State 95

   43 Stmt: ForStmt .

    $default  reduce using rule 43 (Stmt)


State 96

   45 Stmt: ReturnStmt .

    $default  reduce using rule 45 (Stmt)


State 97

   44 Stmt: BreakStmt .

    $default  reduce using rule 44 (Stmt)


State 98

   46 Stmt: PrintStmt .

    $default  reduce using rule 46 (Stmt)


State 99

   48 Stmt: Expr .
   67 Expr: Expr . SUM Expr
   68     | Expr . SUB Expr
   69     | Expr . MULT Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr
   73     | Expr . LESSTHN Expr
   74     | Expr . LESSEQL Expr
   75     | Expr . GREATERTHN Expr
   76     | Expr . GREATEREQL Expr
   77     | Expr . SAME Expr
   78     | Expr . DIFF Expr
   79     | Expr . AND Expr
   80     | Expr . OR Expr
   87 LValue: Expr . POINT ID
   88       | Expr . LFTBRCKT Expr RGHBRCKT
   90 Call: Expr . POINT ID LFTPARTH Actuals RGHPARTH

    POINT       shift, and go to state 121
    LFTBRCKT    shift, and go to state 122
    OR          shift, and go to state 123
    LESSEQL     shift, and go to state 124
    SUM         shift, and go to state 125
    SUB         shift, and go to state 126
    MULT        shift, and go to state 127
    DIV         shift, and go to state 128
    LESSTHN     shift, and go to state 129
    GREATERTHN  shift, and go to state 130
    MOD         shift, and go to state 131
    GREATEREQL  shift, and go to state 132
    SAME        shift, and go to state 133
    DIFF        shift, and go to state 134
    AND         shift, and go to state 135

    SUB       [reduce using rule 48 (Stmt)]
    $default  reduce using rule 48 (Stmt)


State 100

   61 Expr: LValue . EQUAL Expr
   63     | LValue .

    EQUAL  shift, and go to state 136

    $default  reduce using rule 63 (Expr)


State 101

   65 Expr: Call .

    $default  reduce using rule 65 (Expr)


State 102

   62 Expr: Constant .

    $default  reduce using rule 62 (Expr)


State 103

   37 Prototype: VOID ID LFTPARTH Formals . RGHPARTH SEMICLN

    RGHPARTH  shift, and go to state 137


State 104

   36 Prototype: Type ID LFTPARTH Formals . RGHPARTH SEMICLN

    RGHPARTH  shift, and go to state 138


State 105

   55 ForStmt: FOR LFTPARTH . PossibleExpr SEMICLN PossibleExpr SEMICLN PossibleExpr RGHPARTH Stmt

    THIS         shift, and go to state 68
    NEW          shift, and go to state 74
    NEWARRAY     shift, and go to state 75
    READINTEGER  shift, and go to state 77
    READLINE     shift, and go to state 78
    TRUE         shift, and go to state 79
    FALSE        shift, and go to state 80
    LFTPARTH     shift, and go to state 81
    INTVAL       shift, and go to state 83
    DOUBLEVAL    shift, and go to state 84
    STRINGVAL    shift, and go to state 85
    NULLVAL      shift, and go to state 86
    ID           shift, and go to state 108
    SUB          shift, and go to state 88
    NOT          shift, and go to state 89

    $default  reduce using rule 51 (PossibleExpr)

    PossibleExpr  go to state 139
    Expr          go to state 110
    LValue        go to state 100
    Call          go to state 101
    Constant      go to state 102


State 106

   54 WhileStmt: WHILE LFTPARTH . Expr RGHPARTH Stmt

    THIS         shift, and go to state 68
    NEW          shift, and go to state 74
    NEWARRAY     shift, and go to state 75
    READINTEGER  shift, and go to state 77
    READLINE     shift, and go to state 78
    TRUE         shift, and go to state 79
    FALSE        shift, and go to state 80
    LFTPARTH     shift, and go to state 81
    INTVAL       shift, and go to state 83
    DOUBLEVAL    shift, and go to state 84
    STRINGVAL    shift, and go to state 85
    NULLVAL      shift, and go to state 86
    ID           shift, and go to state 108
    SUB          shift, and go to state 88
    NOT          shift, and go to state 89

    Expr      go to state 140
    LValue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 107

   52 IfStmt: IF LFTPARTH . Expr RGHPARTH Stmt PossibleElse

    THIS         shift, and go to state 68
    NEW          shift, and go to state 74
    NEWARRAY     shift, and go to state 75
    READINTEGER  shift, and go to state 77
    READLINE     shift, and go to state 78
    TRUE         shift, and go to state 79
    FALSE        shift, and go to state 80
    LFTPARTH     shift, and go to state 81
    INTVAL       shift, and go to state 83
    DOUBLEVAL    shift, and go to state 84
    STRINGVAL    shift, and go to state 85
    NULLVAL      shift, and go to state 86
    ID           shift, and go to state 108
    SUB          shift, and go to state 88
    NOT          shift, and go to state 89

    Expr      go to state 141
    LValue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 108

   86 LValue: ID .
   89 Call: ID . LFTPARTH Actuals RGHPARTH

    LFTPARTH  shift, and go to state 118

    LFTPARTH  [reduce using rule 86 (LValue)]
    $default  reduce using rule 86 (LValue)


State 109

   56 ReturnStmt: RETURN PossibleExpr . SEMICLN

    SEMICLN  shift, and go to state 142


State 110

   50 PossibleExpr: Expr .
   67 Expr: Expr . SUM Expr
   68     | Expr . SUB Expr
   69     | Expr . MULT Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr
   73     | Expr . LESSTHN Expr
   74     | Expr . LESSEQL Expr
   75     | Expr . GREATERTHN Expr
   76     | Expr . GREATEREQL Expr
   77     | Expr . SAME Expr
   78     | Expr . DIFF Expr
   79     | Expr . AND Expr
   80     | Expr . OR Expr
   87 LValue: Expr . POINT ID
   88       | Expr . LFTBRCKT Expr RGHBRCKT
   90 Call: Expr . POINT ID LFTPARTH Actuals RGHPARTH

    POINT       shift, and go to state 121
    LFTBRCKT    shift, and go to state 122
    OR          shift, and go to state 123
    LESSEQL     shift, and go to state 124
    SUM         shift, and go to state 125
    SUB         shift, and go to state 126
    MULT        shift, and go to state 127
    DIV         shift, and go to state 128
    LESSTHN     shift, and go to state 129
    GREATERTHN  shift, and go to state 130
    MOD         shift, and go to state 131
    GREATEREQL  shift, and go to state 132
    SAME        shift, and go to state 133
    DIFF        shift, and go to state 134
    AND         shift, and go to state 135

    $default  reduce using rule 50 (PossibleExpr)


State 111

   57 BreakStmt: BREAK SEMICLN .

    $default  reduce using rule 57 (BreakStmt)


State 112

   84 Expr: NEW LFTPARTH . ID RGHPARTH

    ID  shift, and go to state 143


State 113

   85 Expr: NEWARRAY LFTPARTH . Expr COMMA Type RGHPARTH

    THIS         shift, and go to state 68
    NEW          shift, and go to state 74
    NEWARRAY     shift, and go to state 75
    READINTEGER  shift, and go to state 77
    READLINE     shift, and go to state 78
    TRUE         shift, and go to state 79
    FALSE        shift, and go to state 80
    LFTPARTH     shift, and go to state 81
    INTVAL       shift, and go to state 83
    DOUBLEVAL    shift, and go to state 84
    STRINGVAL    shift, and go to state 85
    NULLVAL      shift, and go to state 86
    ID           shift, and go to state 108
    SUB          shift, and go to state 88
    NOT          shift, and go to state 89

    Expr      go to state 144
    LValue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 114

   58 PrintStmt: PRINT LFTPARTH . ListExpr RGHPARTH SEMICLN

    THIS         shift, and go to state 68
    NEW          shift, and go to state 74
    NEWARRAY     shift, and go to state 75
    READINTEGER  shift, and go to state 77
    READLINE     shift, and go to state 78
    TRUE         shift, and go to state 79
    FALSE        shift, and go to state 80
    LFTPARTH     shift, and go to state 81
    INTVAL       shift, and go to state 83
    DOUBLEVAL    shift, and go to state 84
    STRINGVAL    shift, and go to state 85
    NULLVAL      shift, and go to state 86
    ID           shift, and go to state 108
    SUB          shift, and go to state 88
    NOT          shift, and go to state 89

    ListExpr  go to state 145
    Expr      go to state 146
    LValue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 115

   82 Expr: READINTEGER LFTPARTH . RGHPARTH

    RGHPARTH  shift, and go to state 147


State 116

   83 Expr: READLINE LFTPARTH . RGHPARTH

    RGHPARTH  shift, and go to state 148


State 117

   66 Expr: LFTPARTH Expr . RGHPARTH
   67     | Expr . SUM Expr
   68     | Expr . SUB Expr
   69     | Expr . MULT Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr
   73     | Expr . LESSTHN Expr
   74     | Expr . LESSEQL Expr
   75     | Expr . GREATERTHN Expr
   76     | Expr . GREATEREQL Expr
   77     | Expr . SAME Expr
   78     | Expr . DIFF Expr
   79     | Expr . AND Expr
   80     | Expr . OR Expr
   87 LValue: Expr . POINT ID
   88       | Expr . LFTBRCKT Expr RGHBRCKT
   90 Call: Expr . POINT ID LFTPARTH Actuals RGHPARTH

    POINT       shift, and go to state 121
    LFTBRCKT    shift, and go to state 122
    RGHPARTH    shift, and go to state 149
    OR          shift, and go to state 123
    LESSEQL     shift, and go to state 124
    SUM         shift, and go to state 125
    SUB         shift, and go to state 126
    MULT        shift, and go to state 127
    DIV         shift, and go to state 128
    LESSTHN     shift, and go to state 129
    GREATERTHN  shift, and go to state 130
    MOD         shift, and go to state 131
    GREATEREQL  shift, and go to state 132
    SAME        shift, and go to state 133
    DIFF        shift, and go to state 134
    AND         shift, and go to state 135


State 118

   89 Call: ID LFTPARTH . Actuals RGHPARTH

    THIS         shift, and go to state 68
    NEW          shift, and go to state 74
    NEWARRAY     shift, and go to state 75
    READINTEGER  shift, and go to state 77
    READLINE     shift, and go to state 78
    TRUE         shift, and go to state 79
    FALSE        shift, and go to state 80
    LFTPARTH     shift, and go to state 81
    INTVAL       shift, and go to state 83
    DOUBLEVAL    shift, and go to state 84
    STRINGVAL    shift, and go to state 85
    NULLVAL      shift, and go to state 86
    ID           shift, and go to state 108
    SUB          shift, and go to state 88
    NOT          shift, and go to state 89

    $default  reduce using rule 92 (Actuals)

    ListExpr  go to state 150
    Expr      go to state 146
    LValue    go to state 100
    Call      go to state 101
    Actuals   go to state 151
    Constant  go to state 102


State 119

   67 Expr: Expr . SUM Expr
   68     | Expr . SUB Expr
   69     | Expr . MULT Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr
   72     | SUB Expr .
   73     | Expr . LESSTHN Expr
   74     | Expr . LESSEQL Expr
   75     | Expr . GREATERTHN Expr
   76     | Expr . GREATEREQL Expr
   77     | Expr . SAME Expr
   78     | Expr . DIFF Expr
   79     | Expr . AND Expr
   80     | Expr . OR Expr
   87 LValue: Expr . POINT ID
   88       | Expr . LFTBRCKT Expr RGHBRCKT
   90 Call: Expr . POINT ID LFTPARTH Actuals RGHPARTH

    POINT     shift, and go to state 121
    LFTBRCKT  shift, and go to state 122
    OR        shift, and go to state 123
    SAME      shift, and go to state 133
    DIFF      shift, and go to state 134
    AND       shift, and go to state 135

    POINT     [reduce using rule 72 (Expr)]
    LFTBRCKT  [reduce using rule 72 (Expr)]
    $default  reduce using rule 72 (Expr)


State 120

   67 Expr: Expr . SUM Expr
   68     | Expr . SUB Expr
   69     | Expr . MULT Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr
   73     | Expr . LESSTHN Expr
   74     | Expr . LESSEQL Expr
   75     | Expr . GREATERTHN Expr
   76     | Expr . GREATEREQL Expr
   77     | Expr . SAME Expr
   78     | Expr . DIFF Expr
   79     | Expr . AND Expr
   80     | Expr . OR Expr
   81     | NOT Expr .
   87 LValue: Expr . POINT ID
   88       | Expr . LFTBRCKT Expr RGHBRCKT
   90 Call: Expr . POINT ID LFTPARTH Actuals RGHPARTH

    POINT     shift, and go to state 121
    LFTBRCKT  shift, and go to state 122

    POINT     [reduce using rule 81 (Expr)]
    LFTBRCKT  [reduce using rule 81 (Expr)]
    $default  reduce using rule 81 (Expr)


State 121

   87 LValue: Expr POINT . ID
   90 Call: Expr POINT . ID LFTPARTH Actuals RGHPARTH

    ID  shift, and go to state 152


State 122

   88 LValue: Expr LFTBRCKT . Expr RGHBRCKT

    THIS         shift, and go to state 68
    NEW          shift, and go to state 74
    NEWARRAY     shift, and go to state 75
    READINTEGER  shift, and go to state 77
    READLINE     shift, and go to state 78
    TRUE         shift, and go to state 79
    FALSE        shift, and go to state 80
    LFTPARTH     shift, and go to state 81
    INTVAL       shift, and go to state 83
    DOUBLEVAL    shift, and go to state 84
    STRINGVAL    shift, and go to state 85
    NULLVAL      shift, and go to state 86
    ID           shift, and go to state 108
    SUB          shift, and go to state 88
    NOT          shift, and go to state 89

    Expr      go to state 153
    LValue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 123

   80 Expr: Expr OR . Expr

    THIS         shift, and go to state 68
    NEW          shift, and go to state 74
    NEWARRAY     shift, and go to state 75
    READINTEGER  shift, and go to state 77
    READLINE     shift, and go to state 78
    TRUE         shift, and go to state 79
    FALSE        shift, and go to state 80
    LFTPARTH     shift, and go to state 81
    INTVAL       shift, and go to state 83
    DOUBLEVAL    shift, and go to state 84
    STRINGVAL    shift, and go to state 85
    NULLVAL      shift, and go to state 86
    ID           shift, and go to state 108
    SUB          shift, and go to state 88
    NOT          shift, and go to state 89

    Expr      go to state 154
    LValue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 124

   74 Expr: Expr LESSEQL . Expr

    THIS         shift, and go to state 68
    NEW          shift, and go to state 74
    NEWARRAY     shift, and go to state 75
    READINTEGER  shift, and go to state 77
    READLINE     shift, and go to state 78
    TRUE         shift, and go to state 79
    FALSE        shift, and go to state 80
    LFTPARTH     shift, and go to state 81
    INTVAL       shift, and go to state 83
    DOUBLEVAL    shift, and go to state 84
    STRINGVAL    shift, and go to state 85
    NULLVAL      shift, and go to state 86
    ID           shift, and go to state 108
    SUB          shift, and go to state 88
    NOT          shift, and go to state 89

    Expr      go to state 155
    LValue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 125

   67 Expr: Expr SUM . Expr

    THIS         shift, and go to state 68
    NEW          shift, and go to state 74
    NEWARRAY     shift, and go to state 75
    READINTEGER  shift, and go to state 77
    READLINE     shift, and go to state 78
    TRUE         shift, and go to state 79
    FALSE        shift, and go to state 80
    LFTPARTH     shift, and go to state 81
    INTVAL       shift, and go to state 83
    DOUBLEVAL    shift, and go to state 84
    STRINGVAL    shift, and go to state 85
    NULLVAL      shift, and go to state 86
    ID           shift, and go to state 108
    SUB          shift, and go to state 88
    NOT          shift, and go to state 89

    Expr      go to state 156
    LValue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 126

   68 Expr: Expr SUB . Expr

    THIS         shift, and go to state 68
    NEW          shift, and go to state 74
    NEWARRAY     shift, and go to state 75
    READINTEGER  shift, and go to state 77
    READLINE     shift, and go to state 78
    TRUE         shift, and go to state 79
    FALSE        shift, and go to state 80
    LFTPARTH     shift, and go to state 81
    INTVAL       shift, and go to state 83
    DOUBLEVAL    shift, and go to state 84
    STRINGVAL    shift, and go to state 85
    NULLVAL      shift, and go to state 86
    ID           shift, and go to state 108
    SUB          shift, and go to state 88
    NOT          shift, and go to state 89

    Expr      go to state 157
    LValue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 127

   69 Expr: Expr MULT . Expr

    THIS         shift, and go to state 68
    NEW          shift, and go to state 74
    NEWARRAY     shift, and go to state 75
    READINTEGER  shift, and go to state 77
    READLINE     shift, and go to state 78
    TRUE         shift, and go to state 79
    FALSE        shift, and go to state 80
    LFTPARTH     shift, and go to state 81
    INTVAL       shift, and go to state 83
    DOUBLEVAL    shift, and go to state 84
    STRINGVAL    shift, and go to state 85
    NULLVAL      shift, and go to state 86
    ID           shift, and go to state 108
    SUB          shift, and go to state 88
    NOT          shift, and go to state 89

    Expr      go to state 158
    LValue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 128

   70 Expr: Expr DIV . Expr

    THIS         shift, and go to state 68
    NEW          shift, and go to state 74
    NEWARRAY     shift, and go to state 75
    READINTEGER  shift, and go to state 77
    READLINE     shift, and go to state 78
    TRUE         shift, and go to state 79
    FALSE        shift, and go to state 80
    LFTPARTH     shift, and go to state 81
    INTVAL       shift, and go to state 83
    DOUBLEVAL    shift, and go to state 84
    STRINGVAL    shift, and go to state 85
    NULLVAL      shift, and go to state 86
    ID           shift, and go to state 108
    SUB          shift, and go to state 88
    NOT          shift, and go to state 89

    Expr      go to state 159
    LValue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 129

   73 Expr: Expr LESSTHN . Expr

    THIS         shift, and go to state 68
    NEW          shift, and go to state 74
    NEWARRAY     shift, and go to state 75
    READINTEGER  shift, and go to state 77
    READLINE     shift, and go to state 78
    TRUE         shift, and go to state 79
    FALSE        shift, and go to state 80
    LFTPARTH     shift, and go to state 81
    INTVAL       shift, and go to state 83
    DOUBLEVAL    shift, and go to state 84
    STRINGVAL    shift, and go to state 85
    NULLVAL      shift, and go to state 86
    ID           shift, and go to state 108
    SUB          shift, and go to state 88
    NOT          shift, and go to state 89

    Expr      go to state 160
    LValue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 130

   75 Expr: Expr GREATERTHN . Expr

    THIS         shift, and go to state 68
    NEW          shift, and go to state 74
    NEWARRAY     shift, and go to state 75
    READINTEGER  shift, and go to state 77
    READLINE     shift, and go to state 78
    TRUE         shift, and go to state 79
    FALSE        shift, and go to state 80
    LFTPARTH     shift, and go to state 81
    INTVAL       shift, and go to state 83
    DOUBLEVAL    shift, and go to state 84
    STRINGVAL    shift, and go to state 85
    NULLVAL      shift, and go to state 86
    ID           shift, and go to state 108
    SUB          shift, and go to state 88
    NOT          shift, and go to state 89

    Expr      go to state 161
    LValue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 131

   71 Expr: Expr MOD . Expr

    THIS         shift, and go to state 68
    NEW          shift, and go to state 74
    NEWARRAY     shift, and go to state 75
    READINTEGER  shift, and go to state 77
    READLINE     shift, and go to state 78
    TRUE         shift, and go to state 79
    FALSE        shift, and go to state 80
    LFTPARTH     shift, and go to state 81
    INTVAL       shift, and go to state 83
    DOUBLEVAL    shift, and go to state 84
    STRINGVAL    shift, and go to state 85
    NULLVAL      shift, and go to state 86
    ID           shift, and go to state 108
    SUB          shift, and go to state 88
    NOT          shift, and go to state 89

    Expr      go to state 162
    LValue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 132

   76 Expr: Expr GREATEREQL . Expr

    THIS         shift, and go to state 68
    NEW          shift, and go to state 74
    NEWARRAY     shift, and go to state 75
    READINTEGER  shift, and go to state 77
    READLINE     shift, and go to state 78
    TRUE         shift, and go to state 79
    FALSE        shift, and go to state 80
    LFTPARTH     shift, and go to state 81
    INTVAL       shift, and go to state 83
    DOUBLEVAL    shift, and go to state 84
    STRINGVAL    shift, and go to state 85
    NULLVAL      shift, and go to state 86
    ID           shift, and go to state 108
    SUB          shift, and go to state 88
    NOT          shift, and go to state 89

    Expr      go to state 163
    LValue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 133

   77 Expr: Expr SAME . Expr

    THIS         shift, and go to state 68
    NEW          shift, and go to state 74
    NEWARRAY     shift, and go to state 75
    READINTEGER  shift, and go to state 77
    READLINE     shift, and go to state 78
    TRUE         shift, and go to state 79
    FALSE        shift, and go to state 80
    LFTPARTH     shift, and go to state 81
    INTVAL       shift, and go to state 83
    DOUBLEVAL    shift, and go to state 84
    STRINGVAL    shift, and go to state 85
    NULLVAL      shift, and go to state 86
    ID           shift, and go to state 108
    SUB          shift, and go to state 88
    NOT          shift, and go to state 89

    Expr      go to state 164
    LValue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 134

   78 Expr: Expr DIFF . Expr

    THIS         shift, and go to state 68
    NEW          shift, and go to state 74
    NEWARRAY     shift, and go to state 75
    READINTEGER  shift, and go to state 77
    READLINE     shift, and go to state 78
    TRUE         shift, and go to state 79
    FALSE        shift, and go to state 80
    LFTPARTH     shift, and go to state 81
    INTVAL       shift, and go to state 83
    DOUBLEVAL    shift, and go to state 84
    STRINGVAL    shift, and go to state 85
    NULLVAL      shift, and go to state 86
    ID           shift, and go to state 108
    SUB          shift, and go to state 88
    NOT          shift, and go to state 89

    Expr      go to state 165
    LValue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 135

   79 Expr: Expr AND . Expr

    THIS         shift, and go to state 68
    NEW          shift, and go to state 74
    NEWARRAY     shift, and go to state 75
    READINTEGER  shift, and go to state 77
    READLINE     shift, and go to state 78
    TRUE         shift, and go to state 79
    FALSE        shift, and go to state 80
    LFTPARTH     shift, and go to state 81
    INTVAL       shift, and go to state 83
    DOUBLEVAL    shift, and go to state 84
    STRINGVAL    shift, and go to state 85
    NULLVAL      shift, and go to state 86
    ID           shift, and go to state 108
    SUB          shift, and go to state 88
    NOT          shift, and go to state 89

    Expr      go to state 166
    LValue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 136

   61 Expr: LValue EQUAL . Expr

    THIS         shift, and go to state 68
    NEW          shift, and go to state 74
    NEWARRAY     shift, and go to state 75
    READINTEGER  shift, and go to state 77
    READLINE     shift, and go to state 78
    TRUE         shift, and go to state 79
    FALSE        shift, and go to state 80
    LFTPARTH     shift, and go to state 81
    INTVAL       shift, and go to state 83
    DOUBLEVAL    shift, and go to state 84
    STRINGVAL    shift, and go to state 85
    NULLVAL      shift, and go to state 86
    ID           shift, and go to state 108
    SUB          shift, and go to state 88
    NOT          shift, and go to state 89

    Expr      go to state 167
    LValue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 137

   37 Prototype: VOID ID LFTPARTH Formals RGHPARTH . SEMICLN

    SEMICLN  shift, and go to state 168


State 138

   36 Prototype: Type ID LFTPARTH Formals RGHPARTH . SEMICLN

    SEMICLN  shift, and go to state 169


State 139

   55 ForStmt: FOR LFTPARTH PossibleExpr . SEMICLN PossibleExpr SEMICLN PossibleExpr RGHPARTH Stmt

    SEMICLN  shift, and go to state 170


State 140

   54 WhileStmt: WHILE LFTPARTH Expr . RGHPARTH Stmt
   67 Expr: Expr . SUM Expr
   68     | Expr . SUB Expr
   69     | Expr . MULT Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr
   73     | Expr . LESSTHN Expr
   74     | Expr . LESSEQL Expr
   75     | Expr . GREATERTHN Expr
   76     | Expr . GREATEREQL Expr
   77     | Expr . SAME Expr
   78     | Expr . DIFF Expr
   79     | Expr . AND Expr
   80     | Expr . OR Expr
   87 LValue: Expr . POINT ID
   88       | Expr . LFTBRCKT Expr RGHBRCKT
   90 Call: Expr . POINT ID LFTPARTH Actuals RGHPARTH

    POINT       shift, and go to state 121
    LFTBRCKT    shift, and go to state 122
    RGHPARTH    shift, and go to state 171
    OR          shift, and go to state 123
    LESSEQL     shift, and go to state 124
    SUM         shift, and go to state 125
    SUB         shift, and go to state 126
    MULT        shift, and go to state 127
    DIV         shift, and go to state 128
    LESSTHN     shift, and go to state 129
    GREATERTHN  shift, and go to state 130
    MOD         shift, and go to state 131
    GREATEREQL  shift, and go to state 132
    SAME        shift, and go to state 133
    DIFF        shift, and go to state 134
    AND         shift, and go to state 135


State 141

   52 IfStmt: IF LFTPARTH Expr . RGHPARTH Stmt PossibleElse
   67 Expr: Expr . SUM Expr
   68     | Expr . SUB Expr
   69     | Expr . MULT Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr
   73     | Expr . LESSTHN Expr
   74     | Expr . LESSEQL Expr
   75     | Expr . GREATERTHN Expr
   76     | Expr . GREATEREQL Expr
   77     | Expr . SAME Expr
   78     | Expr . DIFF Expr
   79     | Expr . AND Expr
   80     | Expr . OR Expr
   87 LValue: Expr . POINT ID
   88       | Expr . LFTBRCKT Expr RGHBRCKT
   90 Call: Expr . POINT ID LFTPARTH Actuals RGHPARTH

    POINT       shift, and go to state 121
    LFTBRCKT    shift, and go to state 122
    RGHPARTH    shift, and go to state 172
    OR          shift, and go to state 123
    LESSEQL     shift, and go to state 124
    SUM         shift, and go to state 125
    SUB         shift, and go to state 126
    MULT        shift, and go to state 127
    DIV         shift, and go to state 128
    LESSTHN     shift, and go to state 129
    GREATERTHN  shift, and go to state 130
    MOD         shift, and go to state 131
    GREATEREQL  shift, and go to state 132
    SAME        shift, and go to state 133
    DIFF        shift, and go to state 134
    AND         shift, and go to state 135


State 142

   56 ReturnStmt: RETURN PossibleExpr SEMICLN .

    $default  reduce using rule 56 (ReturnStmt)


State 143

   84 Expr: NEW LFTPARTH ID . RGHPARTH

    RGHPARTH  shift, and go to state 173


State 144

   67 Expr: Expr . SUM Expr
   68     | Expr . SUB Expr
   69     | Expr . MULT Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr
   73     | Expr . LESSTHN Expr
   74     | Expr . LESSEQL Expr
   75     | Expr . GREATERTHN Expr
   76     | Expr . GREATEREQL Expr
   77     | Expr . SAME Expr
   78     | Expr . DIFF Expr
   79     | Expr . AND Expr
   80     | Expr . OR Expr
   85     | NEWARRAY LFTPARTH Expr . COMMA Type RGHPARTH
   87 LValue: Expr . POINT ID
   88       | Expr . LFTBRCKT Expr RGHBRCKT
   90 Call: Expr . POINT ID LFTPARTH Actuals RGHPARTH

    COMMA       shift, and go to state 174
    POINT       shift, and go to state 121
    LFTBRCKT    shift, and go to state 122
    OR          shift, and go to state 123
    LESSEQL     shift, and go to state 124
    SUM         shift, and go to state 125
    SUB         shift, and go to state 126
    MULT        shift, and go to state 127
    DIV         shift, and go to state 128
    LESSTHN     shift, and go to state 129
    GREATERTHN  shift, and go to state 130
    MOD         shift, and go to state 131
    GREATEREQL  shift, and go to state 132
    SAME        shift, and go to state 133
    DIFF        shift, and go to state 134
    AND         shift, and go to state 135


State 145

   58 PrintStmt: PRINT LFTPARTH ListExpr . RGHPARTH SEMICLN
   60 ListExpr: ListExpr . COMMA Expr

    COMMA     shift, and go to state 175
    RGHPARTH  shift, and go to state 176


State 146

   59 ListExpr: Expr .
   67 Expr: Expr . SUM Expr
   68     | Expr . SUB Expr
   69     | Expr . MULT Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr
   73     | Expr . LESSTHN Expr
   74     | Expr . LESSEQL Expr
   75     | Expr . GREATERTHN Expr
   76     | Expr . GREATEREQL Expr
   77     | Expr . SAME Expr
   78     | Expr . DIFF Expr
   79     | Expr . AND Expr
   80     | Expr . OR Expr
   87 LValue: Expr . POINT ID
   88       | Expr . LFTBRCKT Expr RGHBRCKT
   90 Call: Expr . POINT ID LFTPARTH Actuals RGHPARTH

    POINT       shift, and go to state 121
    LFTBRCKT    shift, and go to state 122
    OR          shift, and go to state 123
    LESSEQL     shift, and go to state 124
    SUM         shift, and go to state 125
    SUB         shift, and go to state 126
    MULT        shift, and go to state 127
    DIV         shift, and go to state 128
    LESSTHN     shift, and go to state 129
    GREATERTHN  shift, and go to state 130
    MOD         shift, and go to state 131
    GREATEREQL  shift, and go to state 132
    SAME        shift, and go to state 133
    DIFF        shift, and go to state 134
    AND         shift, and go to state 135

    $default  reduce using rule 59 (ListExpr)


State 147

   82 Expr: READINTEGER LFTPARTH RGHPARTH .

    $default  reduce using rule 82 (Expr)


State 148

   83 Expr: READLINE LFTPARTH RGHPARTH .

    $default  reduce using rule 83 (Expr)


State 149

   66 Expr: LFTPARTH Expr RGHPARTH .

    $default  reduce using rule 66 (Expr)


State 150

   60 ListExpr: ListExpr . COMMA Expr
   91 Actuals: ListExpr .

    COMMA  shift, and go to state 175

    $default  reduce using rule 91 (Actuals)


State 151

   89 Call: ID LFTPARTH Actuals . RGHPARTH

    RGHPARTH  shift, and go to state 177


State 152

   87 LValue: Expr POINT ID .
   90 Call: Expr POINT ID . LFTPARTH Actuals RGHPARTH

    LFTPARTH  shift, and go to state 178

    LFTPARTH  [reduce using rule 87 (LValue)]
    $default  reduce using rule 87 (LValue)


State 153

   67 Expr: Expr . SUM Expr
   68     | Expr . SUB Expr
   69     | Expr . MULT Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr
   73     | Expr . LESSTHN Expr
   74     | Expr . LESSEQL Expr
   75     | Expr . GREATERTHN Expr
   76     | Expr . GREATEREQL Expr
   77     | Expr . SAME Expr
   78     | Expr . DIFF Expr
   79     | Expr . AND Expr
   80     | Expr . OR Expr
   87 LValue: Expr . POINT ID
   88       | Expr . LFTBRCKT Expr RGHBRCKT
   88       | Expr LFTBRCKT Expr . RGHBRCKT
   90 Call: Expr . POINT ID LFTPARTH Actuals RGHPARTH

    POINT       shift, and go to state 121
    LFTBRCKT    shift, and go to state 122
    RGHBRCKT    shift, and go to state 179
    OR          shift, and go to state 123
    LESSEQL     shift, and go to state 124
    SUM         shift, and go to state 125
    SUB         shift, and go to state 126
    MULT        shift, and go to state 127
    DIV         shift, and go to state 128
    LESSTHN     shift, and go to state 129
    GREATERTHN  shift, and go to state 130
    MOD         shift, and go to state 131
    GREATEREQL  shift, and go to state 132
    SAME        shift, and go to state 133
    DIFF        shift, and go to state 134
    AND         shift, and go to state 135


State 154

   67 Expr: Expr . SUM Expr
   68     | Expr . SUB Expr
   69     | Expr . MULT Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr
   73     | Expr . LESSTHN Expr
   74     | Expr . LESSEQL Expr
   75     | Expr . GREATERTHN Expr
   76     | Expr . GREATEREQL Expr
   77     | Expr . SAME Expr
   78     | Expr . DIFF Expr
   79     | Expr . AND Expr
   80     | Expr . OR Expr
   80     | Expr OR Expr .
   87 LValue: Expr . POINT ID
   88       | Expr . LFTBRCKT Expr RGHBRCKT
   90 Call: Expr . POINT ID LFTPARTH Actuals RGHPARTH

    POINT     shift, and go to state 121
    LFTBRCKT  shift, and go to state 122

    POINT     [reduce using rule 80 (Expr)]
    LFTBRCKT  [reduce using rule 80 (Expr)]
    $default  reduce using rule 80 (Expr)


State 155

   67 Expr: Expr . SUM Expr
   68     | Expr . SUB Expr
   69     | Expr . MULT Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr
   73     | Expr . LESSTHN Expr
   74     | Expr . LESSEQL Expr
   74     | Expr LESSEQL Expr .
   75     | Expr . GREATERTHN Expr
   76     | Expr . GREATEREQL Expr
   77     | Expr . SAME Expr
   78     | Expr . DIFF Expr
   79     | Expr . AND Expr
   80     | Expr . OR Expr
   87 LValue: Expr . POINT ID
   88       | Expr . LFTBRCKT Expr RGHBRCKT
   90 Call: Expr . POINT ID LFTPARTH Actuals RGHPARTH

    POINT     shift, and go to state 121
    LFTBRCKT  shift, and go to state 122
    OR        shift, and go to state 123
    SAME      shift, and go to state 133
    DIFF      shift, and go to state 134
    AND       shift, and go to state 135

    POINT     [reduce using rule 74 (Expr)]
    LFTBRCKT  [reduce using rule 74 (Expr)]
    $default  reduce using rule 74 (Expr)


State 156

   67 Expr: Expr . SUM Expr
   67     | Expr SUM Expr .
   68     | Expr . SUB Expr
   69     | Expr . MULT Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr
   73     | Expr . LESSTHN Expr
   74     | Expr . LESSEQL Expr
   75     | Expr . GREATERTHN Expr
   76     | Expr . GREATEREQL Expr
   77     | Expr . SAME Expr
   78     | Expr . DIFF Expr
   79     | Expr . AND Expr
   80     | Expr . OR Expr
   87 LValue: Expr . POINT ID
   88       | Expr . LFTBRCKT Expr RGHBRCKT
   90 Call: Expr . POINT ID LFTPARTH Actuals RGHPARTH

    POINT     shift, and go to state 121
    LFTBRCKT  shift, and go to state 122
    OR        shift, and go to state 123
    SAME      shift, and go to state 133
    DIFF      shift, and go to state 134
    AND       shift, and go to state 135

    POINT     [reduce using rule 67 (Expr)]
    LFTBRCKT  [reduce using rule 67 (Expr)]
    $default  reduce using rule 67 (Expr)


State 157

   67 Expr: Expr . SUM Expr
   68     | Expr . SUB Expr
   68     | Expr SUB Expr .
   69     | Expr . MULT Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr
   73     | Expr . LESSTHN Expr
   74     | Expr . LESSEQL Expr
   75     | Expr . GREATERTHN Expr
   76     | Expr . GREATEREQL Expr
   77     | Expr . SAME Expr
   78     | Expr . DIFF Expr
   79     | Expr . AND Expr
   80     | Expr . OR Expr
   87 LValue: Expr . POINT ID
   88       | Expr . LFTBRCKT Expr RGHBRCKT
   90 Call: Expr . POINT ID LFTPARTH Actuals RGHPARTH

    POINT     shift, and go to state 121
    LFTBRCKT  shift, and go to state 122
    OR        shift, and go to state 123
    SAME      shift, and go to state 133
    DIFF      shift, and go to state 134
    AND       shift, and go to state 135

    POINT     [reduce using rule 68 (Expr)]
    LFTBRCKT  [reduce using rule 68 (Expr)]
    $default  reduce using rule 68 (Expr)


State 158

   67 Expr: Expr . SUM Expr
   68     | Expr . SUB Expr
   69     | Expr . MULT Expr
   69     | Expr MULT Expr .
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr
   73     | Expr . LESSTHN Expr
   74     | Expr . LESSEQL Expr
   75     | Expr . GREATERTHN Expr
   76     | Expr . GREATEREQL Expr
   77     | Expr . SAME Expr
   78     | Expr . DIFF Expr
   79     | Expr . AND Expr
   80     | Expr . OR Expr
   87 LValue: Expr . POINT ID
   88       | Expr . LFTBRCKT Expr RGHBRCKT
   90 Call: Expr . POINT ID LFTPARTH Actuals RGHPARTH

    POINT     shift, and go to state 121
    LFTBRCKT  shift, and go to state 122
    OR        shift, and go to state 123
    SAME      shift, and go to state 133
    DIFF      shift, and go to state 134
    AND       shift, and go to state 135

    POINT     [reduce using rule 69 (Expr)]
    LFTBRCKT  [reduce using rule 69 (Expr)]
    $default  reduce using rule 69 (Expr)


State 159

   67 Expr: Expr . SUM Expr
   68     | Expr . SUB Expr
   69     | Expr . MULT Expr
   70     | Expr . DIV Expr
   70     | Expr DIV Expr .
   71     | Expr . MOD Expr
   73     | Expr . LESSTHN Expr
   74     | Expr . LESSEQL Expr
   75     | Expr . GREATERTHN Expr
   76     | Expr . GREATEREQL Expr
   77     | Expr . SAME Expr
   78     | Expr . DIFF Expr
   79     | Expr . AND Expr
   80     | Expr . OR Expr
   87 LValue: Expr . POINT ID
   88       | Expr . LFTBRCKT Expr RGHBRCKT
   90 Call: Expr . POINT ID LFTPARTH Actuals RGHPARTH

    POINT     shift, and go to state 121
    LFTBRCKT  shift, and go to state 122
    OR        shift, and go to state 123
    SAME      shift, and go to state 133
    DIFF      shift, and go to state 134
    AND       shift, and go to state 135

    POINT     [reduce using rule 70 (Expr)]
    LFTBRCKT  [reduce using rule 70 (Expr)]
    $default  reduce using rule 70 (Expr)


State 160

   67 Expr: Expr . SUM Expr
   68     | Expr . SUB Expr
   69     | Expr . MULT Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr
   73     | Expr . LESSTHN Expr
   73     | Expr LESSTHN Expr .
   74     | Expr . LESSEQL Expr
   75     | Expr . GREATERTHN Expr
   76     | Expr . GREATEREQL Expr
   77     | Expr . SAME Expr
   78     | Expr . DIFF Expr
   79     | Expr . AND Expr
   80     | Expr . OR Expr
   87 LValue: Expr . POINT ID
   88       | Expr . LFTBRCKT Expr RGHBRCKT
   90 Call: Expr . POINT ID LFTPARTH Actuals RGHPARTH

    POINT     shift, and go to state 121
    LFTBRCKT  shift, and go to state 122
    OR        shift, and go to state 123
    SAME      shift, and go to state 133
    DIFF      shift, and go to state 134
    AND       shift, and go to state 135

    POINT     [reduce using rule 73 (Expr)]
    LFTBRCKT  [reduce using rule 73 (Expr)]
    $default  reduce using rule 73 (Expr)


State 161

   67 Expr: Expr . SUM Expr
   68     | Expr . SUB Expr
   69     | Expr . MULT Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr
   73     | Expr . LESSTHN Expr
   74     | Expr . LESSEQL Expr
   75     | Expr . GREATERTHN Expr
   75     | Expr GREATERTHN Expr .
   76     | Expr . GREATEREQL Expr
   77     | Expr . SAME Expr
   78     | Expr . DIFF Expr
   79     | Expr . AND Expr
   80     | Expr . OR Expr
   87 LValue: Expr . POINT ID
   88       | Expr . LFTBRCKT Expr RGHBRCKT
   90 Call: Expr . POINT ID LFTPARTH Actuals RGHPARTH

    POINT     shift, and go to state 121
    LFTBRCKT  shift, and go to state 122
    OR        shift, and go to state 123
    SAME      shift, and go to state 133
    DIFF      shift, and go to state 134
    AND       shift, and go to state 135

    POINT     [reduce using rule 75 (Expr)]
    LFTBRCKT  [reduce using rule 75 (Expr)]
    $default  reduce using rule 75 (Expr)


State 162

   67 Expr: Expr . SUM Expr
   68     | Expr . SUB Expr
   69     | Expr . MULT Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr
   71     | Expr MOD Expr .
   73     | Expr . LESSTHN Expr
   74     | Expr . LESSEQL Expr
   75     | Expr . GREATERTHN Expr
   76     | Expr . GREATEREQL Expr
   77     | Expr . SAME Expr
   78     | Expr . DIFF Expr
   79     | Expr . AND Expr
   80     | Expr . OR Expr
   87 LValue: Expr . POINT ID
   88       | Expr . LFTBRCKT Expr RGHBRCKT
   90 Call: Expr . POINT ID LFTPARTH Actuals RGHPARTH

    POINT     shift, and go to state 121
    LFTBRCKT  shift, and go to state 122
    OR        shift, and go to state 123
    SAME      shift, and go to state 133
    DIFF      shift, and go to state 134
    AND       shift, and go to state 135

    POINT     [reduce using rule 71 (Expr)]
    LFTBRCKT  [reduce using rule 71 (Expr)]
    $default  reduce using rule 71 (Expr)


State 163

   67 Expr: Expr . SUM Expr
   68     | Expr . SUB Expr
   69     | Expr . MULT Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr
   73     | Expr . LESSTHN Expr
   74     | Expr . LESSEQL Expr
   75     | Expr . GREATERTHN Expr
   76     | Expr . GREATEREQL Expr
   76     | Expr GREATEREQL Expr .
   77     | Expr . SAME Expr
   78     | Expr . DIFF Expr
   79     | Expr . AND Expr
   80     | Expr . OR Expr
   87 LValue: Expr . POINT ID
   88       | Expr . LFTBRCKT Expr RGHBRCKT
   90 Call: Expr . POINT ID LFTPARTH Actuals RGHPARTH

    POINT     shift, and go to state 121
    LFTBRCKT  shift, and go to state 122
    OR        shift, and go to state 123
    SAME      shift, and go to state 133
    DIFF      shift, and go to state 134
    AND       shift, and go to state 135

    POINT     [reduce using rule 76 (Expr)]
    LFTBRCKT  [reduce using rule 76 (Expr)]
    $default  reduce using rule 76 (Expr)


State 164

   67 Expr: Expr . SUM Expr
   68     | Expr . SUB Expr
   69     | Expr . MULT Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr
   73     | Expr . LESSTHN Expr
   74     | Expr . LESSEQL Expr
   75     | Expr . GREATERTHN Expr
   76     | Expr . GREATEREQL Expr
   77     | Expr . SAME Expr
   77     | Expr SAME Expr .
   78     | Expr . DIFF Expr
   79     | Expr . AND Expr
   80     | Expr . OR Expr
   87 LValue: Expr . POINT ID
   88       | Expr . LFTBRCKT Expr RGHBRCKT
   90 Call: Expr . POINT ID LFTPARTH Actuals RGHPARTH

    POINT     shift, and go to state 121
    LFTBRCKT  shift, and go to state 122

    POINT     [reduce using rule 77 (Expr)]
    LFTBRCKT  [reduce using rule 77 (Expr)]
    $default  reduce using rule 77 (Expr)


State 165

   67 Expr: Expr . SUM Expr
   68     | Expr . SUB Expr
   69     | Expr . MULT Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr
   73     | Expr . LESSTHN Expr
   74     | Expr . LESSEQL Expr
   75     | Expr . GREATERTHN Expr
   76     | Expr . GREATEREQL Expr
   77     | Expr . SAME Expr
   78     | Expr . DIFF Expr
   78     | Expr DIFF Expr .
   79     | Expr . AND Expr
   80     | Expr . OR Expr
   87 LValue: Expr . POINT ID
   88       | Expr . LFTBRCKT Expr RGHBRCKT
   90 Call: Expr . POINT ID LFTPARTH Actuals RGHPARTH

    POINT     shift, and go to state 121
    LFTBRCKT  shift, and go to state 122

    POINT     [reduce using rule 78 (Expr)]
    LFTBRCKT  [reduce using rule 78 (Expr)]
    $default  reduce using rule 78 (Expr)


State 166

   67 Expr: Expr . SUM Expr
   68     | Expr . SUB Expr
   69     | Expr . MULT Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr
   73     | Expr . LESSTHN Expr
   74     | Expr . LESSEQL Expr
   75     | Expr . GREATERTHN Expr
   76     | Expr . GREATEREQL Expr
   77     | Expr . SAME Expr
   78     | Expr . DIFF Expr
   79     | Expr . AND Expr
   79     | Expr AND Expr .
   80     | Expr . OR Expr
   87 LValue: Expr . POINT ID
   88       | Expr . LFTBRCKT Expr RGHBRCKT
   90 Call: Expr . POINT ID LFTPARTH Actuals RGHPARTH

    POINT     shift, and go to state 121
    LFTBRCKT  shift, and go to state 122

    POINT     [reduce using rule 79 (Expr)]
    LFTBRCKT  [reduce using rule 79 (Expr)]
    $default  reduce using rule 79 (Expr)


State 167

   61 Expr: LValue EQUAL Expr .
   67     | Expr . SUM Expr
   68     | Expr . SUB Expr
   69     | Expr . MULT Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr
   73     | Expr . LESSTHN Expr
   74     | Expr . LESSEQL Expr
   75     | Expr . GREATERTHN Expr
   76     | Expr . GREATEREQL Expr
   77     | Expr . SAME Expr
   78     | Expr . DIFF Expr
   79     | Expr . AND Expr
   80     | Expr . OR Expr
   87 LValue: Expr . POINT ID
   88       | Expr . LFTBRCKT Expr RGHBRCKT
   90 Call: Expr . POINT ID LFTPARTH Actuals RGHPARTH

    POINT     shift, and go to state 121
    LFTBRCKT  shift, and go to state 122

    POINT     [reduce using rule 61 (Expr)]
    LFTBRCKT  [reduce using rule 61 (Expr)]
    $default  reduce using rule 61 (Expr)


State 168

   37 Prototype: VOID ID LFTPARTH Formals RGHPARTH SEMICLN .

    $default  reduce using rule 37 (Prototype)


State 169

   36 Prototype: Type ID LFTPARTH Formals RGHPARTH SEMICLN .

    $default  reduce using rule 36 (Prototype)


State 170

   55 ForStmt: FOR LFTPARTH PossibleExpr SEMICLN . PossibleExpr SEMICLN PossibleExpr RGHPARTH Stmt

    THIS         shift, and go to state 68
    NEW          shift, and go to state 74
    NEWARRAY     shift, and go to state 75
    READINTEGER  shift, and go to state 77
    READLINE     shift, and go to state 78
    TRUE         shift, and go to state 79
    FALSE        shift, and go to state 80
    LFTPARTH     shift, and go to state 81
    INTVAL       shift, and go to state 83
    DOUBLEVAL    shift, and go to state 84
    STRINGVAL    shift, and go to state 85
    NULLVAL      shift, and go to state 86
    ID           shift, and go to state 108
    SUB          shift, and go to state 88
    NOT          shift, and go to state 89

    $default  reduce using rule 51 (PossibleExpr)

    PossibleExpr  go to state 180
    Expr          go to state 110
    LValue        go to state 100
    Call          go to state 101
    Constant      go to state 102


State 171

   54 WhileStmt: WHILE LFTPARTH Expr RGHPARTH . Stmt

    INTEGER      shift, and go to state 2
    DOUBLE       shift, and go to state 3
    BOOL         shift, and go to state 4
    STRING       shift, and go to state 5
    THIS         shift, and go to state 68
    FOR          shift, and go to state 69
    WHILE        shift, and go to state 70
    IF           shift, and go to state 71
    RETURN       shift, and go to state 72
    BREAK        shift, and go to state 73
    NEW          shift, and go to state 74
    NEWARRAY     shift, and go to state 75
    PRINT        shift, and go to state 76
    READINTEGER  shift, and go to state 77
    READLINE     shift, and go to state 78
    TRUE         shift, and go to state 79
    FALSE        shift, and go to state 80
    LFTPARTH     shift, and go to state 81
    LFTGATE      shift, and go to state 52
    INTVAL       shift, and go to state 83
    DOUBLEVAL    shift, and go to state 84
    STRINGVAL    shift, and go to state 85
    NULLVAL      shift, and go to state 86
    ID           shift, and go to state 87
    SUB          shift, and go to state 88
    NOT          shift, and go to state 89

    VariableDecl  go to state 90
    Variable      go to state 13
    Type          go to state 33
    StmtBlock     go to state 91
    Stmt          go to state 181
    IfStmt        go to state 93
    WhileStmt     go to state 94
    ForStmt       go to state 95
    ReturnStmt    go to state 96
    BreakStmt     go to state 97
    PrintStmt     go to state 98
    Expr          go to state 99
    LValue        go to state 100
    Call          go to state 101
    Constant      go to state 102


State 172

   52 IfStmt: IF LFTPARTH Expr RGHPARTH . Stmt PossibleElse

    INTEGER      shift, and go to state 2
    DOUBLE       shift, and go to state 3
    BOOL         shift, and go to state 4
    STRING       shift, and go to state 5
    THIS         shift, and go to state 68
    FOR          shift, and go to state 69
    WHILE        shift, and go to state 70
    IF           shift, and go to state 71
    RETURN       shift, and go to state 72
    BREAK        shift, and go to state 73
    NEW          shift, and go to state 74
    NEWARRAY     shift, and go to state 75
    PRINT        shift, and go to state 76
    READINTEGER  shift, and go to state 77
    READLINE     shift, and go to state 78
    TRUE         shift, and go to state 79
    FALSE        shift, and go to state 80
    LFTPARTH     shift, and go to state 81
    LFTGATE      shift, and go to state 52
    INTVAL       shift, and go to state 83
    DOUBLEVAL    shift, and go to state 84
    STRINGVAL    shift, and go to state 85
    NULLVAL      shift, and go to state 86
    ID           shift, and go to state 87
    SUB          shift, and go to state 88
    NOT          shift, and go to state 89

    VariableDecl  go to state 90
    Variable      go to state 13
    Type          go to state 33
    StmtBlock     go to state 91
    Stmt          go to state 182
    IfStmt        go to state 93
    WhileStmt     go to state 94
    ForStmt       go to state 95
    ReturnStmt    go to state 96
    BreakStmt     go to state 97
    PrintStmt     go to state 98
    Expr          go to state 99
    LValue        go to state 100
    Call          go to state 101
    Constant      go to state 102


State 173

   84 Expr: NEW LFTPARTH ID RGHPARTH .

    $default  reduce using rule 84 (Expr)


State 174

   85 Expr: NEWARRAY LFTPARTH Expr COMMA . Type RGHPARTH

    INTEGER  shift, and go to state 2
    DOUBLE   shift, and go to state 3
    BOOL     shift, and go to state 4
    STRING   shift, and go to state 5
    ID       shift, and go to state 8

    Type  go to state 183


State 175

   60 ListExpr: ListExpr COMMA . Expr

    THIS         shift, and go to state 68
    NEW          shift, and go to state 74
    NEWARRAY     shift, and go to state 75
    READINTEGER  shift, and go to state 77
    READLINE     shift, and go to state 78
    TRUE         shift, and go to state 79
    FALSE        shift, and go to state 80
    LFTPARTH     shift, and go to state 81
    INTVAL       shift, and go to state 83
    DOUBLEVAL    shift, and go to state 84
    STRINGVAL    shift, and go to state 85
    NULLVAL      shift, and go to state 86
    ID           shift, and go to state 108
    SUB          shift, and go to state 88
    NOT          shift, and go to state 89

    Expr      go to state 184
    LValue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 176

   58 PrintStmt: PRINT LFTPARTH ListExpr RGHPARTH . SEMICLN

    SEMICLN  shift, and go to state 185


State 177

   89 Call: ID LFTPARTH Actuals RGHPARTH .

    $default  reduce using rule 89 (Call)


State 178

   90 Call: Expr POINT ID LFTPARTH . Actuals RGHPARTH

    THIS         shift, and go to state 68
    NEW          shift, and go to state 74
    NEWARRAY     shift, and go to state 75
    READINTEGER  shift, and go to state 77
    READLINE     shift, and go to state 78
    TRUE         shift, and go to state 79
    FALSE        shift, and go to state 80
    LFTPARTH     shift, and go to state 81
    INTVAL       shift, and go to state 83
    DOUBLEVAL    shift, and go to state 84
    STRINGVAL    shift, and go to state 85
    NULLVAL      shift, and go to state 86
    ID           shift, and go to state 108
    SUB          shift, and go to state 88
    NOT          shift, and go to state 89

    $default  reduce using rule 92 (Actuals)

    ListExpr  go to state 150
    Expr      go to state 146
    LValue    go to state 100
    Call      go to state 101
    Actuals   go to state 186
    Constant  go to state 102


State 179

   88 LValue: Expr LFTBRCKT Expr RGHBRCKT .

    $default  reduce using rule 88 (LValue)


State 180

   55 ForStmt: FOR LFTPARTH PossibleExpr SEMICLN PossibleExpr . SEMICLN PossibleExpr RGHPARTH Stmt

    SEMICLN  shift, and go to state 187


State 181

   54 WhileStmt: WHILE LFTPARTH Expr RGHPARTH Stmt .

    $default  reduce using rule 54 (WhileStmt)


State 182

   52 IfStmt: IF LFTPARTH Expr RGHPARTH Stmt . PossibleElse

    ELSE  shift, and go to state 188

    PossibleElse  go to state 189


State 183

   15 Type: Type . LFTBRCKT RGHBRCKT
   85 Expr: NEWARRAY LFTPARTH Expr COMMA Type . RGHPARTH

    LFTBRCKT  shift, and go to state 24
    RGHPARTH  shift, and go to state 190


State 184

   60 ListExpr: ListExpr COMMA Expr .
   67 Expr: Expr . SUM Expr
   68     | Expr . SUB Expr
   69     | Expr . MULT Expr
   70     | Expr . DIV Expr
   71     | Expr . MOD Expr
   73     | Expr . LESSTHN Expr
   74     | Expr . LESSEQL Expr
   75     | Expr . GREATERTHN Expr
   76     | Expr . GREATEREQL Expr
   77     | Expr . SAME Expr
   78     | Expr . DIFF Expr
   79     | Expr . AND Expr
   80     | Expr . OR Expr
   87 LValue: Expr . POINT ID
   88       | Expr . LFTBRCKT Expr RGHBRCKT
   90 Call: Expr . POINT ID LFTPARTH Actuals RGHPARTH

    POINT       shift, and go to state 121
    LFTBRCKT    shift, and go to state 122
    OR          shift, and go to state 123
    LESSEQL     shift, and go to state 124
    SUM         shift, and go to state 125
    SUB         shift, and go to state 126
    MULT        shift, and go to state 127
    DIV         shift, and go to state 128
    LESSTHN     shift, and go to state 129
    GREATERTHN  shift, and go to state 130
    MOD         shift, and go to state 131
    GREATEREQL  shift, and go to state 132
    SAME        shift, and go to state 133
    DIFF        shift, and go to state 134
    AND         shift, and go to state 135

    $default  reduce using rule 60 (ListExpr)


State 185

   58 PrintStmt: PRINT LFTPARTH ListExpr RGHPARTH SEMICLN .

    $default  reduce using rule 58 (PrintStmt)


State 186

   90 Call: Expr POINT ID LFTPARTH Actuals . RGHPARTH

    RGHPARTH  shift, and go to state 191


State 187

   55 ForStmt: FOR LFTPARTH PossibleExpr SEMICLN PossibleExpr SEMICLN . PossibleExpr RGHPARTH Stmt

    THIS         shift, and go to state 68
    NEW          shift, and go to state 74
    NEWARRAY     shift, and go to state 75
    READINTEGER  shift, and go to state 77
    READLINE     shift, and go to state 78
    TRUE         shift, and go to state 79
    FALSE        shift, and go to state 80
    LFTPARTH     shift, and go to state 81
    INTVAL       shift, and go to state 83
    DOUBLEVAL    shift, and go to state 84
    STRINGVAL    shift, and go to state 85
    NULLVAL      shift, and go to state 86
    ID           shift, and go to state 108
    SUB          shift, and go to state 88
    NOT          shift, and go to state 89

    $default  reduce using rule 51 (PossibleExpr)

    PossibleExpr  go to state 192
    Expr          go to state 110
    LValue        go to state 100
    Call          go to state 101
    Constant      go to state 102


State 188

   53 PossibleElse: ELSE . Stmt

    INTEGER      shift, and go to state 2
    DOUBLE       shift, and go to state 3
    BOOL         shift, and go to state 4
    STRING       shift, and go to state 5
    THIS         shift, and go to state 68
    FOR          shift, and go to state 69
    WHILE        shift, and go to state 70
    IF           shift, and go to state 71
    RETURN       shift, and go to state 72
    BREAK        shift, and go to state 73
    NEW          shift, and go to state 74
    NEWARRAY     shift, and go to state 75
    PRINT        shift, and go to state 76
    READINTEGER  shift, and go to state 77
    READLINE     shift, and go to state 78
    TRUE         shift, and go to state 79
    FALSE        shift, and go to state 80
    LFTPARTH     shift, and go to state 81
    LFTGATE      shift, and go to state 52
    INTVAL       shift, and go to state 83
    DOUBLEVAL    shift, and go to state 84
    STRINGVAL    shift, and go to state 85
    NULLVAL      shift, and go to state 86
    ID           shift, and go to state 87
    SUB          shift, and go to state 88
    NOT          shift, and go to state 89

    VariableDecl  go to state 90
    Variable      go to state 13
    Type          go to state 33
    StmtBlock     go to state 91
    Stmt          go to state 193
    IfStmt        go to state 93
    WhileStmt     go to state 94
    ForStmt       go to state 95
    ReturnStmt    go to state 96
    BreakStmt     go to state 97
    PrintStmt     go to state 98
    Expr          go to state 99
    LValue        go to state 100
    Call          go to state 101
    Constant      go to state 102


State 189

   52 IfStmt: IF LFTPARTH Expr RGHPARTH Stmt PossibleElse .

    $default  reduce using rule 52 (IfStmt)


State 190

   85 Expr: NEWARRAY LFTPARTH Expr COMMA Type RGHPARTH .

    $default  reduce using rule 85 (Expr)


State 191

   90 Call: Expr POINT ID LFTPARTH Actuals RGHPARTH .

    $default  reduce using rule 90 (Call)


State 192

   55 ForStmt: FOR LFTPARTH PossibleExpr SEMICLN PossibleExpr SEMICLN PossibleExpr . RGHPARTH Stmt

    RGHPARTH  shift, and go to state 194


State 193

   53 PossibleElse: ELSE Stmt .

    $default  reduce using rule 53 (PossibleElse)


State 194

   55 ForStmt: FOR LFTPARTH PossibleExpr SEMICLN PossibleExpr SEMICLN PossibleExpr RGHPARTH . Stmt

    INTEGER      shift, and go to state 2
    DOUBLE       shift, and go to state 3
    BOOL         shift, and go to state 4
    STRING       shift, and go to state 5
    THIS         shift, and go to state 68
    FOR          shift, and go to state 69
    WHILE        shift, and go to state 70
    IF           shift, and go to state 71
    RETURN       shift, and go to state 72
    BREAK        shift, and go to state 73
    NEW          shift, and go to state 74
    NEWARRAY     shift, and go to state 75
    PRINT        shift, and go to state 76
    READINTEGER  shift, and go to state 77
    READLINE     shift, and go to state 78
    TRUE         shift, and go to state 79
    FALSE        shift, and go to state 80
    LFTPARTH     shift, and go to state 81
    LFTGATE      shift, and go to state 52
    INTVAL       shift, and go to state 83
    DOUBLEVAL    shift, and go to state 84
    STRINGVAL    shift, and go to state 85
    NULLVAL      shift, and go to state 86
    ID           shift, and go to state 87
    SUB          shift, and go to state 88
    NOT          shift, and go to state 89

    VariableDecl  go to state 90
    Variable      go to state 13
    Type          go to state 33
    StmtBlock     go to state 91
    Stmt          go to state 195
    IfStmt        go to state 93
    WhileStmt     go to state 94
    ForStmt       go to state 95
    ReturnStmt    go to state 96
    BreakStmt     go to state 97
    PrintStmt     go to state 98
    Expr          go to state 99
    LValue        go to state 100
    Call          go to state 101
    Constant      go to state 102


State 195

   55 ForStmt: FOR LFTPARTH PossibleExpr SEMICLN PossibleExpr SEMICLN PossibleExpr RGHPARTH Stmt .

    $default  reduce using rule 55 (ForStmt)
